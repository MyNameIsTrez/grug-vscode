{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "grug",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#control_keywords"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#types"
		},
		{
			"include": "#booleans"
		},
		{
			"include": "#logical_operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#capitalized"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#me"
		},
		{
			"include": "#null_id"
		},
		{
			"include": "#lowercase"
		}
	],
	"repository": {
		"comment": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "# .*"
				}
			]
		},
		"control_keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(return|if|else|while|break|continue)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"match": "(on_\\w+)\\(",
					"captures": {
						"1": {
							"name": "support.function.grug_on_fn"
						}
					}
				},
				{
					"match": "(helper_\\w+)\\(",
					"captures": {
						"1": {
							"name": "support.function.grug_helper_fn"
						}
					}
				},
				{
					"match": "(\\w+)\\(",
					"captures": {
						"1": {
							"name": "support.function.grug_game_fn"
						}
					}
				}
			]
		},
		"types": {
			"patterns": [
				{
					"match": "[:|\\)] \\b(.+?)\\b",
					"captures": {
						"1": {
							"name": "storage.type"
						}
					}
				}
			]
		},
		"booleans": {
			"patterns": [
				{
					"match": "\\b(true|false)\\b",
					"captures": {
						"1": {
							"name": "storage.type"
						}
					}
				}
			]
		},
		"logical_operators": {
			"patterns": [
				{
					"match": "\\b(and|or|not)\\b",
					"captures": {
						"1": {
							"name": "storage.type"
						}
					}
				}
			]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape",
					"match": "\\\\."
				}
			]
		},
		"capitalized": {
			"patterns": [
				{
					"name": "support.type",
					"match": "\\b[A-Z]\\w+\\b"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\b[0-9]+\\b"
				}
			]
		},
		"me": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\bme\\b"
				}
			]
		},
		"null_id": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "\\bnull_id\\b"
				}
			]
		},
		"lowercase": {
			"patterns": [
				{
					"name": "variable.name",
					"match": "\\b(\\w)+\\b"
				}
			]
		}
	},
	"scopeName": "source.grug"
}
